blueprint:
  name: Cat Cam Motion → LLM → Multi-Notify (direct /media, per-second filenames)
  domain: automation
  description: >
    On motion, wait for Ring eventId, download the clip to /media, analyze with LLMVision,
    then notify multiple recipients with a snapshot and a tap-to-play video link.
    Works with multiple cameras (create one automation per cam).

  input:
    motion_binary_sensor:
      name: Motion Binary Sensor
      description: Motion sensor for this camera
      selector:
        entity:
          domain: binary_sensor

    event_select:
      name: Event Select (Ring)
      description: The select entity that exposes eventId + recordingUrl attributes
      selector:
        entity:
          domain: select

    notify_devices:
      name: Recipients (mobile_app devices)
      description: Phones to receive the notification
      selector:
        device:
          multiple: true
          filter:
            - integration: mobile_app

    provider_id:
      name: LLMVision Provider
      selector:
        config_entry:
          integration: llmvision

    subdir:
      name: Camera Subdirectory
      default: cc
      selector:
        text: {}

    cooldown_minutes:
      name: Cooldown (minutes)
      default: 10
      selector:
        number:
          min: 0
          max: 120
          mode: slider
          unit_of_measurement: min

mode: single

# -------- Variables --------
variables:
  event_select_entity: !input event_select
  provider: !input provider_id
  subdir: !input subdir

  # Per-second filename
  tstamp: "{{ now().strftime('%Y%m%dT%H%M%S') }}"
  filename: "{{ tstamp ~ '_motion.mp4' }}"

  # Files saved to /config/media → served at /media/local
  media_base: /config/media/ring_cams
  media_abs: "{{ media_base ~ '/' ~ subdir ~ '/' ~ filename }}"
  media_rel: "{{ media_abs | replace('/config/media/','/media/local/') }}"

  cam_name: >-
    {{ state_attr(event_select_entity, 'friendly_name')
       or state_attr(trigger.entity_id, 'friendly_name')
       or 'Camera' }}

trigger:
  - platform: state
    entity_id: !input motion_binary_sensor
    to: "on"

action:
  - alias: Wait for EventId to change
    wait_for_trigger:
      - platform: state
        entity_id: !input event_select
        attribute: eventId
    timeout: "00:05"

  - alias: Build Downloader Vars
    variables:
      recording_url: "{{ state_attr(event_select_entity, 'recordingUrl') | string }}"
      subdir_str: "{{ subdir | string }}"
      filename_str: "{{ filename | string }}"

  - alias: Download clip to /media
    service: downloader.download_file
    data:
      overwrite: false
      url: "{{ recording_url }}"
      subdir: "{{ subdir_str }}"
      filename: "{{ filename_str }}"

  - delay: "00:00:02"

  - alias: Analyze Video with LLMVision
    service: llmvision.video_analyzer
    response_variable: response
    data:
      provider: "{{ provider | string }}"
      video_file: "{{ media_abs }}"
      remember: true
      max_frames: 3
      target_width: 1280
      max_tokens: 1000
      generate_title: true
      expose_images: true
      message: >
        Summarize the events focusing only on moving subjects like people,
        vehicles, or animals. Ignore static objects. Keep it concise.
        If no movement is detected, respond with:
        'No activity observed. The response must be less than 255 characters.'

  - alias: Build Notification Vars
    variables:
      device_list: !input notify_devices
      keyframe_rel: >-
        {% set p = (response.key_frame | default('')) %}
        {% if p.startswith('/config/media/') %}
          {{ p.replace('/config/media/','/media/local/') }}
        {% else %}
          {{ p.replace('/config','') }}
        {% endif %}
      video_rel: "{{ media_rel }}"
      message_text: "{{ response.response_text | default('No activity observed.') }}"

  - alias: Send Notification to Each Recipient
    repeat:
      for_each: "{{ device_list }}"
      sequence:
        - variables:
            service_name: >-
              {{ 'notify.mobile_app_' ~ (device_attr(repeat.item, 'name') | slugify) }}
        - service: "{{ service_name }}"
          data:
            title: "{{ cam_name }} — Motion Detected"
            message: "{{ message_text }}"
            data:
              image: "{{ keyframe_rel }}"
              attachment:
                url: "{{ keyframe_rel }}"
                content-type: "jpeg"
              url: "{{ video_rel }}"
              clickAction: "{{ video_rel }}"

  - alias: Cooldown Before Retrigger
    delay:
      minutes: !input cooldown_minutes
