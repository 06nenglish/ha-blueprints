blueprint:
  name: Cat Cam Motion → LLM → Multi-Notify (GIF preview, /media + /local)
  domain: automation
  description: >
    On motion, wait for Ring eventId, download the clip to /config/media/ring_cams,
    analyze with LLMVision, render a short GIF preview to /config/www (served as /local),
    then notify multiple recipients with the animated GIF thumbnail. Tapping the notification
    opens the GIF (no 401). Create one automation per camera.

  input:
    motion_binary_sensor:
      name: Motion Binary Sensor
      description: Motion sensor for this camera
      selector:
        entity:
          domain: binary_sensor

    event_select:
      name: Event Select (Ring)
      description: The select entity that exposes eventId + recordingUrl attributes
      selector:
        entity:
          domain: select

    notify_devices:
      name: Recipients (mobile_app devices)
      description: Phones to receive the notification
      selector:
        device:
          multiple: true
          filter:
            - integration: mobile_app

    provider_id:
      name: LLMVision Provider
      selector:
        config_entry:
          integration: llmvision

    subdir:
      name: Camera Subdirectory (under ring_cams/)
      description: Folder name for this camera (e.g. cc, front, back)
      default: cc
      selector:
        text: {}

    # ---- GIF tuning ----
    gif_duration:
      name: GIF Duration (seconds)
      default: 5
      selector:
        number:
          min: 1
          max: 8
          step: 1
          mode: slider
          unit_of_measurement: s

    gif_fps:
      name: GIF FPS
      default: 5
      selector:
        number:
          min: 1
          max: 15
          step: 1
          mode: slider
          unit_of_measurement: fps

    gif_width:
      name: GIF Width (pixels)
      default: 320
      selector:
        number:
          min: 160
          max: 640
          step: 10
          mode: slider
          unit_of_measurement: px

    cooldown_minutes:
      name: Cooldown (minutes)
      default: 10
      selector:
        number:
          min: 0
          max: 120
          mode: slider
          unit_of_measurement: min

mode: single

# -------- Variables --------
variables:
  event_select_entity: !input event_select
  provider: !input provider_id
  subdir: !input subdir

  # Filenames (per-second is fine for your setup)
  tstamp: "{{ now().strftime('%Y%m%dT%H%M%S') }}"
  filename_mp4: "{{ tstamp ~ '_motion.mp4' }}"
  filename_gif: "{{ tstamp ~ '_motion.gif' }}"

  # Absolute FS paths (where files live)
  ring_abs_base: /config/media/ring_cams
  llm_abs_base: /config/media/llmvision
  www_abs_base: /config/www/ring_cams

  media_abs: "{{ ring_abs_base ~ '/' ~ subdir ~ '/' ~ filename_mp4 }}"
  gif_abs_dir: "{{ www_abs_base ~ '/' ~ subdir }}"
  gif_abs: "{{ gif_abs_dir ~ '/' ~ filename_gif }}"

  # Served URLs using your media_dirs keys and /local for www
  #   /config/media/ring_cams/... -> /media/ring/...
  #   /config/media/llmvision/... -> /media/llmvision/...
  #   /config/www/..              -> /local/...
  video_rel: "{{ media_abs | replace('/config/media/ring_cams','/media/ring') }}"
  gif_rel: "{{ gif_abs | replace('/config/www','/local') }}"

  cam_name: >-
    {{ state_attr(event_select_entity, 'friendly_name')
       or state_attr(trigger.entity_id, 'friendly_name')
       or 'Camera' }}

trigger:
  - platform: state
    entity_id: !input motion_binary_sensor
    to: "on"

action:
  - alias: Wait for EventId to change
    wait_for_trigger:
      - platform: state
        entity_id: !input event_select
        attribute: eventId
    timeout: "00:05"

  - alias: Build Downloader Vars
    variables:
      recording_url: "{{ state_attr(event_select_entity, 'recordingUrl') | string }}"
      subdir_str: "{{ subdir | string }}"
      filename_mp4_str: "{{ filename_mp4 | string }}"

  - alias: Download clip to /config/media/ring_cams
    service: downloader.download_file
    data:
      overwrite: false
      url: "{{ recording_url }}"
      subdir: "{{ subdir_str }}"
      filename: "{{ filename_mp4_str }}"

  - delay: "00:00:02"

  - alias: Analyze Video with LLMVision
    service: llmvision.video_analyzer
    response_variable: response
    data:
      provider: "{{ provider | string }}"
      video_file: "{{ media_abs }}"
      remember: true
      max_frames: 3
      target_width: 1280
      max_tokens: 1000
      generate_title: true
      expose_images: true
      message: >
        Summarize the events focusing only on moving subjects like people,
        vehicles, or animals. Ignore static objects. Keep it concise.
        If no movement is detected, respond with:
        'No activity observed. The response must be less than 255 characters.'

  # -------- Create GIF preview under /www (served as /local) --------
  - alias: Ensure /config/www/ring_cams/<subdir> exists
    service: shell_command.ensure_dir
    data:
      dir: "{{ gif_abs_dir }}"

  - alias: Render GIF with ffmpeg
    service: shell_command.make_motion_gif
    data:
      input: "{{ media_abs }}"
      output: "{{ gif_abs }}"
      duration: !input gif_duration
      fps: !input gif_fps
      width: !input gif_width

  # -------- Build notification vars --------
  - alias: Build Notification Vars
    variables:
      device_list: !input notify_devices

      # LLMVision keyframe -> /media/llmvision/... (fallback still image if GIF fails)
      keyframe_rel: >-
        {% set p = (response.key_frame | default('')) %}
        {% if p.startswith('/config/media/llmvision') %}
          {{ p.replace('/config/media/llmvision','/media/llmvision') }}
        {% elif p.startswith('/config/media/') %}
          {{ p.replace('/config/media/ring_cams','/media/ring') }}
        {% else %}
          {{ p.replace('/config','') }}
        {% endif %}

      # Prefer the animated GIF preview
      image_rel: "{{ gif_rel }}"
      # Use GIF as tap target too (simple + no auth issues)
      tap_rel: "{{ gif_rel }}"
      # (If you prefer to open the full video instead, switch tap_rel to video_rel)
      message_text: "{{ response.response_text | default('No activity observed.') }}"

  # -------- Notify each selected device --------
  - alias: Send Notification to Each Recipient
    repeat:
      for_each: "{{ device_list }}"
      sequence:
        - alias: Build per-device notify service name
          variables:
            service_name: >-
              {{ 'notify.mobile_app_' ~ (device_attr(repeat.item, 'name') | slugify) }}

        - alias: Send to device
          service: "{{ service_name }}"
          data:
            title: "{{ cam_name }} — Motion Detected"
            message: "{{ message_text }}"
            data:
              # Animated thumbnail (served from /local). iOS/Android accept GIF.
              image: "{{ image_rel }}"
              attachment:
                url: "{{ image_rel }}"
                content-type: "gif"
              # Tap → open the GIF (zero-auth friction). Change to {{ video_rel }} if you prefer MP4.
              url: "{{ tap_rel }}"
              clickAction: "{{ tap_rel }}"

  - alias: Cooldown Before Retrigger
    delay:
      minutes: !input cooldown_minutes
